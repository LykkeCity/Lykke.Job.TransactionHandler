// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace LkeServices.Generated.MarginApi.Models
{
    using System.Linq;

    public partial class MarginTradingAccountBackendContract
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MarginTradingAccountBackendContract class.
        /// </summary>
        public MarginTradingAccountBackendContract() { }

        /// <summary>
        /// Initializes a new instance of the
        /// MarginTradingAccountBackendContract class.
        /// </summary>
        public MarginTradingAccountBackendContract(string id = default(string), string clientId = default(string), string tradingConditionId = default(string), string baseAssetId = default(string), double? balance = default(double?), double? withdrawTransferLimit = default(double?), double? marginCall = default(double?), double? stopOut = default(double?), double? totalCapital = default(double?), double? freeMargin = default(double?), double? marginAvailable = default(double?), double? usedMargin = default(double?), double? marginInit = default(double?), double? pnL = default(double?), double? openPositionsCount = default(double?), double? marginUsageLevel = default(double?), bool? isLive = default(bool?))
        {
            Id = id;
            ClientId = clientId;
            TradingConditionId = tradingConditionId;
            BaseAssetId = baseAssetId;
            Balance = balance;
            WithdrawTransferLimit = withdrawTransferLimit;
            MarginCall = marginCall;
            StopOut = stopOut;
            TotalCapital = totalCapital;
            FreeMargin = freeMargin;
            MarginAvailable = marginAvailable;
            UsedMargin = usedMargin;
            MarginInit = marginInit;
            PnL = pnL;
            OpenPositionsCount = openPositionsCount;
            MarginUsageLevel = marginUsageLevel;
            IsLive = isLive;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "clientId")]
        public string ClientId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "tradingConditionId")]
        public string TradingConditionId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "baseAssetId")]
        public string BaseAssetId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "balance")]
        public double? Balance { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "withdrawTransferLimit")]
        public double? WithdrawTransferLimit { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "marginCall")]
        public double? MarginCall { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "stopOut")]
        public double? StopOut { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "totalCapital")]
        public double? TotalCapital { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "freeMargin")]
        public double? FreeMargin { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "marginAvailable")]
        public double? MarginAvailable { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "usedMargin")]
        public double? UsedMargin { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "marginInit")]
        public double? MarginInit { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "pnL")]
        public double? PnL { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "openPositionsCount")]
        public double? OpenPositionsCount { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "marginUsageLevel")]
        public double? MarginUsageLevel { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "isLive")]
        public bool? IsLive { get; set; }

    }
}
